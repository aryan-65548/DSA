#include <iostream>
using namespace std;

const int MAX = 100; // max size of dynamic array

class DynamicArray {
    int arr[MAX]; // static array
    int size;              // current number of elements

public:
    DynamicArray() {
        size = 0;
    }

    void pushback(int value) {
        if (size < MAX) {
            arr[size++] = value;
        } else {
            cout << "Array is full. Can't add more elements.\n";
        }
    }

    void pop_back() {
        if (size > 0) {
            size--;
        } else {
            cout << "Array is empty. Can't remove elements.\n";
        }
    }

    int get(int index) {
        if (index >= 0 && index < size) {
            return arr[index];
        } else {
            cout << "Index out of bounds.\n";
            return -1;
        }
    }

    int get_size() {
        return size;
    }

    void print() {
        for (int i = 0; i < size; i++) {
            cout << arr[i] << " ";
        }
        cout << endl;
    }
};

int main() {
    DynamicArray da;

    da.pushback(10);
    da.pushback(20);
    da.pushback(30);
    da.print(); 

    da.pop_back();
    da.print(); 

    cout << "Element at index 1: " << da.get(1) << endl;
    cout << "Current size: " << da.get_size() << endl;

    return 0;
}
